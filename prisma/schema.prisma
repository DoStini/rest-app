// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique @default(cuid()) @db.VarChar(255)
  name     String  @default("")
  Order    Order[]
}

model Order {
  id           Int            @id @default(autoincrement())
  name         String
  creator      User           @relation(fields: [userId], references: [id])
  userId       Int
  dayId        Int
  OrderProduct OrderProduct[]
  Table        Table?         @relation(fields: [tableId], references: [id])
  tableId      Int?
  createdAt    DateTime       @default(now()) @db.Timestamp(6)
  closed       Boolean        @default(false)
  closedAt     DateTime?      @db.Timestamp(6)
  closedTotal  Decimal?       @db.Decimal(12, 2)
  day          Day            @relation(fields: [dayId], references: [id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  position  Int       @default(autoincrement())
  products  Product[]
  printable Boolean   @default(true)
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String
  image        String?
  price        Decimal        @db.Decimal(12, 2)
  position     Int            @default(autoincrement())
  category     Category?      @relation(fields: [categoryId], references: [id])
  orderProduct OrderProduct[]
  categoryId   Int?
  manual       Boolean        @default(false)
}

model OrderProduct {
  product       Product  @relation(fields: [productId], references: [id])
  order         Order    @relation(fields: [orderId], references: [id])
  createdAt     DateTime @default(now()) @db.Timestamp(6)
  amount        Int
  comment       String?
  productId     Int
  orderId       Int
  closedTotal   Decimal? @db.Decimal(12, 2)
  orderedAmount Int      @default(0)

  @@unique([productId, orderId])
}

model Table {
  id     Int     @id @default(autoincrement())
  name   String
  orders Order[]
}

model Day {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  closedAt  DateTime? @db.Timestamp(6)
  total     Decimal   @default(0) @db.Decimal(12, 2)
  closed    Boolean   @default(false)
  Order     Order[]
}
